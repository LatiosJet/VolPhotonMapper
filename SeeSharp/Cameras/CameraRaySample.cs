using SeeSharp.Geometry;
using SimpleImageIO;
using TinyEmbree;

namespace SeeSharp.Cameras {
    /// <summary>
    /// Stores sample data for a ray generated by a camera
    /// </summary>
    public struct CameraRaySample {
        /// <summary>
        /// The sampled ray
        /// </summary>
        public Ray Ray;

        /// <summary>
        /// The importance (= pixel contribution) divided by the sampling pdf
        /// </summary>
        public RgbColor Weight;

        /// <summary>
        /// Surface point on the camera lens, or the closest equivalent, depending on the camera model
        /// </summary>
        public SurfacePoint Point;

        /// <summary>
        /// Pdf that this ray was sampled with. Units depend on the camera model.
        /// </summary>
        public float PdfRay;

        /// <summary>
        /// Pdf of sampling the same point via connection in a light tracer.
        /// Same unit as <see cref="PdfRay" />.
        /// </summary>
        public float PdfConnect;
    }
}
